function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,_toPropertyKey(o.key),o)}}function _createClass(e,t,r){return t&&_defineProperties(e.prototype,t),r&&_defineProperties(e,r),Object.defineProperty(e,"prototype",{writable:!1}),e}function _toPropertyKey(e){e=_toPrimitive(e,"string");return"symbol"==_typeof(e)?e:e+""}function _toPrimitive(e,t){if("object"!=_typeof(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0===r)return("string"===t?String:Number)(e);r=r.call(e,t||"default");if("object"!=_typeof(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}var ScrollAnimations=(()=>_createClass(function e(){var t=0<arguments.length&&void 0!==arguments[0]?arguments[0]:"";_classCallCheck(this,e),document.body.classList.add("scrollAnimations"),this.className=t||"animated",this.targets=[]},[{key:"add",value:function(e,t){var r=this,o=!(2<arguments.length&&void 0!==arguments[2])||arguments[2],t={rootMargin:t};document.querySelectorAll(e).forEach(function(e){r.targets.push(e)}),this.observer=new IntersectionObserver(function(e){e.forEach(function(e){e.isIntersecting?e.target.classList.add(r.className):o||e.target.classList.remove(r.className)})},t)}},{key:"videoScrollPause",value:function(e,t){var r=this,t={rootMargin:t};document.querySelectorAll(e).forEach(function(e){r.targets.push(e)}),this.observer=new IntersectionObserver(function(e){e.forEach(function(e){e.isIntersecting||e.target.pause(),e.isIntersecting&&e.target.play()})},t)}},{key:"run",value:function(){var t=this;this.targets.forEach(function(e){t.observer.observe(e)})}}]))();